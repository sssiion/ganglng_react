{"ast":null,"code":"import React, { useMemo, useImperativeHandle, useLayoutEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useRoadview } from '../hooks/useRoadview.js';\nimport { useKakaoMapsSetEffect } from '../hooks/useKakaoMapsSetEffect.js';\n\n/**\n * Roadview에 CustomOverlay를 올릴 때 사용하는 컴포넌트 입니다.\n * `onCreate` 이벤트 또는 `ref` 객체를 통해서 `CustomOverlay` 객체에 직접 접근 및 초기 설정 작업을 지정할 수 있습니다.\n */\nconst CustomOverlayRoadview = /*#__PURE__*/React.forwardRef(function CustomOverlayRoadview(_ref, ref) {\n  let {\n    position,\n    children,\n    clickable,\n    xAnchor,\n    yAnchor,\n    zIndex,\n    altitude,\n    range,\n    onCreate\n  } = _ref;\n  const roadview = useRoadview(`CustomOverlayRoadview`);\n  const overlayPosition = useMemo(() => {\n    if (\"lat\" in position) {\n      return new kakao.maps.LatLng(position.lat, position.lng);\n    }\n    return new kakao.maps.Viewpoint(position.pan, position.tilt, position.zoom, position.panoId);\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [/* eslint-disable @typescript-eslint/ban-ts-comment */\n  /* @ts-ignore */\n  position.lat, /* @ts-ignore */\n  position.lng, /* @ts-ignore */\n  position.pan, /* @ts-ignore */\n  position.tilt, /* @ts-ignore */\n  position.zoom, /* @ts-ignore */\n  position.panoId\n  /* eslint-enable @typescript-eslint/ban-ts-comment */]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  const overlay = useMemo(() => {\n    const container = document.createElement(\"div\");\n    container.style.display = \"none\";\n    const KakaoCustomOverlay = new kakao.maps.CustomOverlay({\n      clickable: clickable,\n      xAnchor: xAnchor,\n      yAnchor: yAnchor,\n      zIndex: zIndex,\n      position: overlayPosition,\n      content: container\n    });\n    return KakaoCustomOverlay;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [clickable, xAnchor, yAnchor]);\n  const container = useMemo(() => overlay.getContent(), [overlay]);\n  useImperativeHandle(ref, () => overlay, [overlay]);\n  useLayoutEffect(() => {\n    if (!roadview) return;\n    overlay.setMap(roadview);\n    return () => {\n      overlay.setMap(null);\n    };\n  }, [overlay, roadview]);\n  useLayoutEffect(() => {\n    if (onCreate) onCreate(overlay);\n  }, [overlay, onCreate]);\n  useKakaoMapsSetEffect(overlay, \"setPosition\", overlayPosition);\n  useKakaoMapsSetEffect(overlay, \"setZIndex\", zIndex);\n  useKakaoMapsSetEffect(overlay, \"setAltitude\", altitude);\n  useKakaoMapsSetEffect(overlay, \"setRange\", range);\n  return container.parentElement && /*#__PURE__*/ReactDOM.createPortal(children, container.parentElement);\n});\nexport { CustomOverlayRoadview };","map":{"version":3,"names":["React","useMemo","useImperativeHandle","useLayoutEffect","ReactDOM","useRoadview","useKakaoMapsSetEffect","CustomOverlayRoadview","forwardRef","_ref","ref","position","children","clickable","xAnchor","yAnchor","zIndex","altitude","range","onCreate","roadview","overlayPosition","kakao","maps","LatLng","lat","lng","Viewpoint","pan","tilt","zoom","panoId","overlay","container","document","createElement","style","display","KakaoCustomOverlay","CustomOverlay","content","getContent","setMap","parentElement","createPortal"],"sources":["C:/Users/USER/my-app/node_modules/react-kakao-maps-sdk/esm/components/CustomOverlayRoadview.js"],"sourcesContent":["import React, { useMemo, useImperativeHandle, useLayoutEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useRoadview } from '../hooks/useRoadview.js';\nimport { useKakaoMapsSetEffect } from '../hooks/useKakaoMapsSetEffect.js';\n\n/**\n * Roadview에 CustomOverlay를 올릴 때 사용하는 컴포넌트 입니다.\n * `onCreate` 이벤트 또는 `ref` 객체를 통해서 `CustomOverlay` 객체에 직접 접근 및 초기 설정 작업을 지정할 수 있습니다.\n */\nconst CustomOverlayRoadview = /*#__PURE__*/React.forwardRef(function CustomOverlayRoadview(_ref, ref) {\n  let {\n    position,\n    children,\n    clickable,\n    xAnchor,\n    yAnchor,\n    zIndex,\n    altitude,\n    range,\n    onCreate\n  } = _ref;\n  const roadview = useRoadview(`CustomOverlayRoadview`);\n  const overlayPosition = useMemo(() => {\n    if (\"lat\" in position) {\n      return new kakao.maps.LatLng(position.lat, position.lng);\n    }\n    return new kakao.maps.Viewpoint(position.pan, position.tilt, position.zoom, position.panoId);\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [/* eslint-disable @typescript-eslint/ban-ts-comment */\n  /* @ts-ignore */\n  position.lat, /* @ts-ignore */\n  position.lng, /* @ts-ignore */\n  position.pan, /* @ts-ignore */\n  position.tilt, /* @ts-ignore */\n  position.zoom, /* @ts-ignore */\n  position.panoId\n  /* eslint-enable @typescript-eslint/ban-ts-comment */]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  const overlay = useMemo(() => {\n    const container = document.createElement(\"div\");\n    container.style.display = \"none\";\n    const KakaoCustomOverlay = new kakao.maps.CustomOverlay({\n      clickable: clickable,\n      xAnchor: xAnchor,\n      yAnchor: yAnchor,\n      zIndex: zIndex,\n      position: overlayPosition,\n      content: container\n    });\n    return KakaoCustomOverlay;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [clickable, xAnchor, yAnchor]);\n  const container = useMemo(() => overlay.getContent(), [overlay]);\n  useImperativeHandle(ref, () => overlay, [overlay]);\n  useLayoutEffect(() => {\n    if (!roadview) return;\n    overlay.setMap(roadview);\n    return () => {\n      overlay.setMap(null);\n    };\n  }, [overlay, roadview]);\n  useLayoutEffect(() => {\n    if (onCreate) onCreate(overlay);\n  }, [overlay, onCreate]);\n  useKakaoMapsSetEffect(overlay, \"setPosition\", overlayPosition);\n  useKakaoMapsSetEffect(overlay, \"setZIndex\", zIndex);\n  useKakaoMapsSetEffect(overlay, \"setAltitude\", altitude);\n  useKakaoMapsSetEffect(overlay, \"setRange\", range);\n  return container.parentElement && /*#__PURE__*/ReactDOM.createPortal(children, container.parentElement);\n});\n\nexport { CustomOverlayRoadview };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}