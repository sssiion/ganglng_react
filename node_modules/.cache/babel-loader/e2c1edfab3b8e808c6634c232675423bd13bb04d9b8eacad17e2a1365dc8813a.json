{"ast":null,"code":"import React, { useMemo, useImperativeHandle, useLayoutEffect } from 'react';\nimport { useMap } from '../hooks/useMap.js';\n\n/**\n * 일반 지도/하이브리드 간 지도 타입 전환 컨트롤을 생성한다.\n * 현재는 일반 지도/하이브리드 간 전환 컨트롤만 지원되며 다른 지도 타입을 제어하는 컨트롤이 필요할 경우에는 직접 구현해야 한다.\n */\nconst MapTypeControl = /*#__PURE__*/React.forwardRef(function MapTypeControl(_ref, ref) {\n  let {\n    position: _position = kakao.maps.ControlPosition.TOPRIGHT\n  } = _ref;\n  const map = useMap(`MapTypeControl`);\n  const position = typeof _position === \"string\" ? kakao.maps.ControlPosition[_position] : _position;\n  const mapTypeControl = useMemo(() => {\n    return new kakao.maps.MapTypeControl();\n  }, []);\n  useImperativeHandle(ref, () => mapTypeControl, [mapTypeControl]);\n  useLayoutEffect(() => {\n    map.addControl(mapTypeControl, position);\n    return () => {\n      map.removeControl(position);\n    };\n  }, [map, mapTypeControl, position]);\n  return null;\n});\nexport { MapTypeControl };","map":{"version":3,"names":["React","useMemo","useImperativeHandle","useLayoutEffect","useMap","MapTypeControl","forwardRef","_ref","ref","position","_position","kakao","maps","ControlPosition","TOPRIGHT","map","mapTypeControl","addControl","removeControl"],"sources":["C:/Users/USER/my-app/node_modules/react-kakao-maps-sdk/esm/components/MapTypeControl.js"],"sourcesContent":["import React, { useMemo, useImperativeHandle, useLayoutEffect } from 'react';\nimport { useMap } from '../hooks/useMap.js';\n\n/**\n * 일반 지도/하이브리드 간 지도 타입 전환 컨트롤을 생성한다.\n * 현재는 일반 지도/하이브리드 간 전환 컨트롤만 지원되며 다른 지도 타입을 제어하는 컨트롤이 필요할 경우에는 직접 구현해야 한다.\n */\nconst MapTypeControl = /*#__PURE__*/React.forwardRef(function MapTypeControl(_ref, ref) {\n  let {\n    position: _position = kakao.maps.ControlPosition.TOPRIGHT\n  } = _ref;\n  const map = useMap(`MapTypeControl`);\n  const position = typeof _position === \"string\" ? kakao.maps.ControlPosition[_position] : _position;\n  const mapTypeControl = useMemo(() => {\n    return new kakao.maps.MapTypeControl();\n  }, []);\n  useImperativeHandle(ref, () => mapTypeControl, [mapTypeControl]);\n  useLayoutEffect(() => {\n    map.addControl(mapTypeControl, position);\n    return () => {\n      map.removeControl(position);\n    };\n  }, [map, mapTypeControl, position]);\n  return null;\n});\n\nexport { MapTypeControl };\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,OAAO,EAAEC,mBAAmB,EAAEC,eAAe,QAAQ,OAAO;AAC5E,SAASC,MAAM,QAAQ,oBAAoB;;AAE3C;AACA;AACA;AACA;AACA,MAAMC,cAAc,GAAG,aAAaL,KAAK,CAACM,UAAU,CAAC,SAASD,cAAcA,CAACE,IAAI,EAAEC,GAAG,EAAE;EACtF,IAAI;IACFC,QAAQ,EAAEC,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACC,eAAe,CAACC;EACnD,CAAC,GAAGP,IAAI;EACR,MAAMQ,GAAG,GAAGX,MAAM,CAAC,gBAAgB,CAAC;EACpC,MAAMK,QAAQ,GAAG,OAAOC,SAAS,KAAK,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAACC,eAAe,CAACH,SAAS,CAAC,GAAGA,SAAS;EAClG,MAAMM,cAAc,GAAGf,OAAO,CAAC,MAAM;IACnC,OAAO,IAAIU,KAAK,CAACC,IAAI,CAACP,cAAc,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EACNH,mBAAmB,CAACM,GAAG,EAAE,MAAMQ,cAAc,EAAE,CAACA,cAAc,CAAC,CAAC;EAChEb,eAAe,CAAC,MAAM;IACpBY,GAAG,CAACE,UAAU,CAACD,cAAc,EAAEP,QAAQ,CAAC;IACxC,OAAO,MAAM;MACXM,GAAG,CAACG,aAAa,CAACT,QAAQ,CAAC;IAC7B,CAAC;EACH,CAAC,EAAE,CAACM,GAAG,EAAEC,cAAc,EAAEP,QAAQ,CAAC,CAAC;EACnC,OAAO,IAAI;AACb,CAAC,CAAC;AAEF,SAASJ,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}