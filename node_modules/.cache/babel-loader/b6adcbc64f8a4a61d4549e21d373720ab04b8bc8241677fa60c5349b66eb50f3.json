{"ast":null,"code":"import React, { useMemo, useImperativeHandle, useLayoutEffect } from 'react';\nimport { useKakaoEvent } from '../hooks/useKakaoEvent.js';\nimport { useMap } from '../hooks/useMap.js';\nimport { useKakaoMapsSetEffect } from '../hooks/useKakaoMapsSetEffect.js';\n\n/**\n * Map 상에 타원을 그립니다.\n */\nconst Ellipse = /*#__PURE__*/React.forwardRef(function Ellipse(_ref, ref) {\n  let {\n    center,\n    rx,\n    ry,\n    fillColor,\n    fillOpacity,\n    strokeColor,\n    strokeOpacity,\n    strokeStyle,\n    strokeWeight,\n    zIndex,\n    onMouseover,\n    onMouseout,\n    onMousemove,\n    onMousedown,\n    onClick,\n    onCreate\n  } = _ref;\n  const map = useMap(`Ellipse`);\n  const ellipseCenter = useMemo(() => {\n    return new kakao.maps.LatLng(center.lat, center.lng);\n  }, [center.lat, center.lng]);\n  const ellipse = useMemo(() => {\n    return new kakao.maps.Ellipse({\n      center: ellipseCenter,\n      rx,\n      ry,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      zIndex\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useImperativeHandle(ref, () => ellipse, [ellipse]);\n  useLayoutEffect(() => {\n    ellipse.setMap(map);\n    return () => {\n      ellipse.setMap(null);\n    };\n  }, [map, ellipse]);\n  useLayoutEffect(() => {\n    if (onCreate) onCreate(ellipse);\n  }, [ellipse, onCreate]);\n  useKakaoMapsSetEffect(ellipse, \"setPosition\", ellipseCenter);\n  useKakaoMapsSetEffect(ellipse, \"setRadius\", rx, ry);\n  useKakaoMapsSetEffect(ellipse, \"setZIndex\", zIndex);\n  useLayoutEffect(() => {\n    ellipse.setOptions({\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight\n    });\n  }, [ellipse, fillColor, fillOpacity, strokeColor, strokeOpacity, strokeStyle, strokeWeight]);\n  useKakaoEvent(ellipse, \"mouseover\", onMouseover);\n  useKakaoEvent(ellipse, \"mouseout\", onMouseout);\n  useKakaoEvent(ellipse, \"mousemove\", onMousemove);\n  useKakaoEvent(ellipse, \"mousedown\", onMousedown);\n  useKakaoEvent(ellipse, \"click\", onClick);\n  return null;\n});\nexport { Ellipse };","map":{"version":3,"names":["React","useMemo","useImperativeHandle","useLayoutEffect","useKakaoEvent","useMap","useKakaoMapsSetEffect","Ellipse","forwardRef","_ref","ref","center","rx","ry","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeStyle","strokeWeight","zIndex","onMouseover","onMouseout","onMousemove","onMousedown","onClick","onCreate","map","ellipseCenter","kakao","maps","LatLng","lat","lng","ellipse","setMap","setOptions"],"sources":["C:/Users/USER/my-app/node_modules/react-kakao-maps-sdk/esm/components/Ellipse.js"],"sourcesContent":["import React, { useMemo, useImperativeHandle, useLayoutEffect } from 'react';\nimport { useKakaoEvent } from '../hooks/useKakaoEvent.js';\nimport { useMap } from '../hooks/useMap.js';\nimport { useKakaoMapsSetEffect } from '../hooks/useKakaoMapsSetEffect.js';\n\n/**\n * Map 상에 타원을 그립니다.\n */\nconst Ellipse = /*#__PURE__*/React.forwardRef(function Ellipse(_ref, ref) {\n  let {\n    center,\n    rx,\n    ry,\n    fillColor,\n    fillOpacity,\n    strokeColor,\n    strokeOpacity,\n    strokeStyle,\n    strokeWeight,\n    zIndex,\n    onMouseover,\n    onMouseout,\n    onMousemove,\n    onMousedown,\n    onClick,\n    onCreate\n  } = _ref;\n  const map = useMap(`Ellipse`);\n  const ellipseCenter = useMemo(() => {\n    return new kakao.maps.LatLng(center.lat, center.lng);\n  }, [center.lat, center.lng]);\n  const ellipse = useMemo(() => {\n    return new kakao.maps.Ellipse({\n      center: ellipseCenter,\n      rx,\n      ry,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      zIndex\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useImperativeHandle(ref, () => ellipse, [ellipse]);\n  useLayoutEffect(() => {\n    ellipse.setMap(map);\n    return () => {\n      ellipse.setMap(null);\n    };\n  }, [map, ellipse]);\n  useLayoutEffect(() => {\n    if (onCreate) onCreate(ellipse);\n  }, [ellipse, onCreate]);\n  useKakaoMapsSetEffect(ellipse, \"setPosition\", ellipseCenter);\n  useKakaoMapsSetEffect(ellipse, \"setRadius\", rx, ry);\n  useKakaoMapsSetEffect(ellipse, \"setZIndex\", zIndex);\n  useLayoutEffect(() => {\n    ellipse.setOptions({\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight\n    });\n  }, [ellipse, fillColor, fillOpacity, strokeColor, strokeOpacity, strokeStyle, strokeWeight]);\n  useKakaoEvent(ellipse, \"mouseover\", onMouseover);\n  useKakaoEvent(ellipse, \"mouseout\", onMouseout);\n  useKakaoEvent(ellipse, \"mousemove\", onMousemove);\n  useKakaoEvent(ellipse, \"mousedown\", onMousedown);\n  useKakaoEvent(ellipse, \"click\", onClick);\n  return null;\n});\n\nexport { Ellipse };\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,OAAO,EAAEC,mBAAmB,EAAEC,eAAe,QAAQ,OAAO;AAC5E,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,qBAAqB,QAAQ,mCAAmC;;AAEzE;AACA;AACA;AACA,MAAMC,OAAO,GAAG,aAAaP,KAAK,CAACQ,UAAU,CAAC,SAASD,OAAOA,CAACE,IAAI,EAAEC,GAAG,EAAE;EACxE,IAAI;IACFC,MAAM;IACNC,EAAE;IACFC,EAAE;IACFC,SAAS;IACTC,WAAW;IACXC,WAAW;IACXC,aAAa;IACbC,WAAW;IACXC,YAAY;IACZC,MAAM;IACNC,WAAW;IACXC,UAAU;IACVC,WAAW;IACXC,WAAW;IACXC,OAAO;IACPC;EACF,CAAC,GAAGjB,IAAI;EACR,MAAMkB,GAAG,GAAGtB,MAAM,CAAC,SAAS,CAAC;EAC7B,MAAMuB,aAAa,GAAG3B,OAAO,CAAC,MAAM;IAClC,OAAO,IAAI4B,KAAK,CAACC,IAAI,CAACC,MAAM,CAACpB,MAAM,CAACqB,GAAG,EAAErB,MAAM,CAACsB,GAAG,CAAC;EACtD,CAAC,EAAE,CAACtB,MAAM,CAACqB,GAAG,EAAErB,MAAM,CAACsB,GAAG,CAAC,CAAC;EAC5B,MAAMC,OAAO,GAAGjC,OAAO,CAAC,MAAM;IAC5B,OAAO,IAAI4B,KAAK,CAACC,IAAI,CAACvB,OAAO,CAAC;MAC5BI,MAAM,EAAEiB,aAAa;MACrBhB,EAAE;MACFC,EAAE;MACFC,SAAS;MACTC,WAAW;MACXC,WAAW;MACXC,aAAa;MACbC,WAAW;MACXC,YAAY;MACZC;IACF,CAAC,CAAC;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EACNlB,mBAAmB,CAACQ,GAAG,EAAE,MAAMwB,OAAO,EAAE,CAACA,OAAO,CAAC,CAAC;EAClD/B,eAAe,CAAC,MAAM;IACpB+B,OAAO,CAACC,MAAM,CAACR,GAAG,CAAC;IACnB,OAAO,MAAM;MACXO,OAAO,CAACC,MAAM,CAAC,IAAI,CAAC;IACtB,CAAC;EACH,CAAC,EAAE,CAACR,GAAG,EAAEO,OAAO,CAAC,CAAC;EAClB/B,eAAe,CAAC,MAAM;IACpB,IAAIuB,QAAQ,EAAEA,QAAQ,CAACQ,OAAO,CAAC;EACjC,CAAC,EAAE,CAACA,OAAO,EAAER,QAAQ,CAAC,CAAC;EACvBpB,qBAAqB,CAAC4B,OAAO,EAAE,aAAa,EAAEN,aAAa,CAAC;EAC5DtB,qBAAqB,CAAC4B,OAAO,EAAE,WAAW,EAAEtB,EAAE,EAAEC,EAAE,CAAC;EACnDP,qBAAqB,CAAC4B,OAAO,EAAE,WAAW,EAAEd,MAAM,CAAC;EACnDjB,eAAe,CAAC,MAAM;IACpB+B,OAAO,CAACE,UAAU,CAAC;MACjBtB,SAAS;MACTC,WAAW;MACXC,WAAW;MACXC,aAAa;MACbC,WAAW;MACXC;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACe,OAAO,EAAEpB,SAAS,EAAEC,WAAW,EAAEC,WAAW,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,CAAC,CAAC;EAC5Ff,aAAa,CAAC8B,OAAO,EAAE,WAAW,EAAEb,WAAW,CAAC;EAChDjB,aAAa,CAAC8B,OAAO,EAAE,UAAU,EAAEZ,UAAU,CAAC;EAC9ClB,aAAa,CAAC8B,OAAO,EAAE,WAAW,EAAEX,WAAW,CAAC;EAChDnB,aAAa,CAAC8B,OAAO,EAAE,WAAW,EAAEV,WAAW,CAAC;EAChDpB,aAAa,CAAC8B,OAAO,EAAE,OAAO,EAAET,OAAO,CAAC;EACxC,OAAO,IAAI;AACb,CAAC,CAAC;AAEF,SAASlB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}